{"version":3,"sources":["../../../app/service/circle.js"],"names":["module","exports","app","model","Circle","User","PAGE_SIZE","CircleService","content","images","user","ctx","userId","_id","nickName","headImage","save","circle","Error","circleId","remove","res","result","n","targetId","findById","targetName","targetUser","findByIdAndUpdate","$inc","count","commentCount","$push","comments","id","commentId","update","$pull","nModified","likes","forEach","element","likeCount","last","followings","followingIds","push","e","find","$in","time","$lt","sort","limit","exec","console","log","likeList","Service"],"mappings":"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","file":"circle.js","sourcesContent":["'use strict';\n\nmodule.exports = app => {\n  const {\n    Circle,\n    User,\n  } = app.model;\n  const PAGE_SIZE = 30;\n  class CircleService extends app.Service {\n\n    /**\n     * 发表动态\n     * @param {String} content 文本内容\n     * @param {String} images 图片地址\n     * @return {*} 动态详情数据\n     */\n    async addCircle(content, images) {\n      const user = this.ctx.user;\n      try {\n        const circle = await new Circle({\n          content,\n          images,\n          userId: user._id,\n          nickName: user.nickName,\n          headImage: user.headImage,\n        }).save();\n        return {\n          circle,\n        };\n      } catch (e) {\n        throw new Error('ADD_CIRCLE_ERROR');\n      }\n    }\n\n    /**\n     * 删除动态\n     * @param {String} circleId 内容id\n     * @return {*} 成功状态\n     */\n    async deleteCircle(circleId) {\n      try {\n        const res = await Circle.remove({\n          _id: circleId,\n          userId: this.ctx.user._id,\n        });\n        if (res.result.n !== 1) {\n          throw new Error();\n        }\n        return 'success';\n      } catch (e) {\n        throw new Error('DELETE_CIRCLE_ERROR');\n      }\n    }\n\n    /**\n     * 添加评论\n     * @param {String} circleId 内容id\n     * @param {String} content 内容\n     * @param {String} targetId 目标用户id\n     * @return {*} 评论信息\n     */\n    async addComment(circleId, content, targetId) {\n      const user = this.ctx.user;\n      try {\n        const circle = await Circle.findById(circleId);\n        let targetName;\n        if (targetId) {\n          const targetUser = await User.findById(targetId, 'nickName');\n          targetName = targetUser.nickName;\n        }\n        await Circle.findByIdAndUpdate(circleId, {\n          $inc: {\n            count: 1,\n            commentCount: 1,\n          },\n          $push: {\n            comments: {\n              _id: circle.count + 1,\n              content,\n              userId: user._id,\n              nickName: user.nickName,\n              headImage: user.headImage,\n              targetId,\n              targetName,\n            },\n          },\n        });\n        const result = await Circle.findById(circleId, 'comments');\n        return result.comments.id(circle.count + 1);\n      } catch (e) {\n        throw new Error('ADD_COMMENT_ERROR');\n      }\n    }\n\n    /**\n     * 删除评论\n     * @param {String} circleId 内容id\n     * @param {String} commentId 评论id\n     * @return {*} 评论信息\n     */\n    async deleteComment(circleId, commentId) {\n      try {\n        const res = await Circle.update({\n          _id: circleId,\n        }, {\n          $inc: {\n            commentCount: -1,\n          },\n          $pull: {\n            comments: {\n              _id: commentId,\n            },\n          },\n        });\n        if (res.nModified !== 1) {\n          throw new Error();\n        }\n        return 'success';\n      } catch (e) {\n        throw new Error('DELETE_ERROR');\n      }\n    }\n\n    /**\n     * 点赞\n     * @param {String} circleId 内容id\n     * @return {*} 成功状态\n     */\n    async giveLike(circleId) {\n      const user = this.ctx.user;\n      user.likes.forEach(element => {\n        if (element.circleId === circleId) {\n          throw new Error('REPEAT_LIKE');\n        }\n      });\n      try {\n        await User.update({\n          _id: user._id,\n        }, {\n          $push: {\n            likes: circleId,\n          },\n        });\n        await Circle.update({\n          _id: circleId,\n        }, {\n          $push: {\n            likes: {\n              userId: user._id,\n              nickName: user.nickName,\n              headImage: user.headImage,\n            },\n          },\n          $inc: {\n            likeCount: 1,\n          },\n        });\n        return 'success';\n      } catch (e) {\n        throw new Error('GIVE_LIKE_ERROR');\n      }\n    }\n\n    /**\n     * 取消赞\n     * @param {String} circleId 内容id\n     * @return {*} 成功状态\n     */\n    async cancelLike(circleId) {\n      const user = this.ctx.user;\n      try {\n        const res = await Circle.update({\n          _id: circleId,\n          'likes.userId': user._id,\n        }, {\n          $pull: {\n            likes: user._id,\n          },\n          $inc: {\n            likeCount: -1,\n          },\n        });\n        if (!res.n) {\n          throw new Error();\n        }\n        await User.update({\n          _id: user._id,\n        }, {\n          $pull: {\n            likes: circleId,\n          },\n        });\n        return 'success';\n      } catch (e) {\n        throw new Error('CANCEL_LIKE_ERROR');\n      }\n    }\n\n    /**\n     * 查看关注的人动态\n     * @param {Number} last 最后一位时间\n     * @return {*} 关注的人动态\n     */\n    async getAttentionList(last) {\n      const user = this.ctx.user;\n      const followings = user.followings;\n      const followingIds = [];\n      followings.forEach(e => {\n        followingIds.push(e.userId);\n      });\n      try {\n        const res = await Circle.find({\n          userId: {\n            $in: followingIds,\n          },\n          time: { $lt: last },\n        }, 'userId nickName headImage likeCount content images commentCount time').sort({\n          time: 'desc',\n        }).limit(PAGE_SIZE)\n          .exec();\n        console.log(res);\n        return res;\n      } catch (e) {\n        throw new Error('SOMETHING_ERROR');\n      }\n    }\n\n    /**\n     * 查看动态\n     * @param {Number} last 最后一位时间\n     * @return {*} 动态\n     */\n    async getCircleList(last) {\n      try {\n        const res = await Circle.find({ time: { $lt: last } }, 'userId nickName time headImage content images likeCount commentCount').sort({\n          time: 'desc',\n        }).limit(PAGE_SIZE)\n          .exec();\n        return res;\n      } catch (e) {\n        throw new Error('SOMETHING_ERROR');\n      }\n    }\n\n    /**\n     * 查看评论\n     * @param {String} circleId 动态id\n     * @return {*} 评论\n     */\n    async getComment(circleId) {\n      try {\n        const res = await Circle.findById(circleId, 'comments').sort({\n          'comments.time': 'desc',\n        });\n        return res;\n      } catch (e) {\n        throw new Error('SOMETHING_ERROR');\n      }\n    }\n\n    /**\n     * 查看点赞列表\n     * @param {String} circleId 内容id\n     * @return {*} 点赞列表\n     */\n    async getLikeList(circleId) {\n      try {\n        const likeList = await Circle.findById(circleId, 'likes');\n        return likeList;\n      } catch (e) {\n        throw new Error('GET_LIKE_LIST_ERROR');\n      }\n    }\n  }\n  return CircleService;\n};\n"]}