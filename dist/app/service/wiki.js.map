{"version":3,"sources":["../../../app/service/wiki.js"],"names":["cheerio","require","module","exports","baseUrl","WikiService","keyWord","ctx","curl","encodeURI","timeout","dataType","result","html","data","realLocation","headers","location","$","load","wiki","content","push","type","find","text","trim","each","index","item","hasClass","app","Service"],"mappings":"AAAA;;;;;;;;;;;;AAEA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACAC,OAAOC,OAAP,GAAiB,eAAO;AACtB,MAAMC,UAAU,yBAAhB;;AADsB,MAEhBC,WAFgB;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAIpB;;;;;AAJoB;AAAA,4FASNC,OATM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAUG,KAAKC,GAAL,CAASC,IAAT,CAAcJ,UAAU,QAAV,GAAqBK,UAAUH,OAAV,CAAnC,EAAuD;AAC1EI,6BAAS,IADiE;AAE1EC,8BAAU;AAFgE,mBAAvD,CAVH;;AAAA;AAUZC,wBAVY;AAcdC,sBAdc;;AAAA,uBAedD,OAAOE,IAfO;AAAA;AAAA;AAAA;;AAgBhBD,yBAAOD,MAAP;AAhBgB;AAAA;;AAAA;AAkBVG,8BAlBU,GAkBKH,OAAOI,OAAP,CAAeC,QAlBpB;AAAA;AAAA,yBAmBH,KAAKV,GAAL,CAASC,IAAT,CAAcJ,UAAUW,YAAxB,EAAsC;AACjDL,6BAAS,IADwC;AAEjDC,8BAAU;AAFuC,mBAAtC,CAnBG;;AAAA;AAmBhBE,sBAnBgB;;AAAA;AAwBZK,mBAxBY,GAwBRlB,QAAQmB,IAAR,CAAaN,KAAKC,IAAlB,CAxBQ;AAyBZM,sBAzBY,GAyBL,EAzBK;AA0BZC,yBA1BY,GA0BFH,EAAE,uDAAF,CA1BE;;AA2BlBE,uBAAKE,IAAL,CAAU,EAAEC,MAAM,OAAR,EAAiBF,SAASA,QAAQG,IAAR,CAAa,yBAAb,EAAwCC,IAAxC,GAA+CC,IAA/C,EAA1B,EAAV;AACAR,oBAAE,KAAF,EAASG,OAAT,EAAkBM,IAAlB,CAAuB,UAACC,KAAD,EAAQC,IAAR,EAAiB;AACtC,wBAAIX,EAAEW,IAAF,EAAQC,QAAR,CAAiB,YAAjB,CAAJ,EAAoC;AAClCV,2BAAKE,IAAL,CAAU,EAAEC,MAAM,YAAR,EAAsBF,SAASH,EAAEW,IAAF,EAAQL,IAAR,CAAa,IAAb,EAAmBC,IAAnB,GACtCC,IADsC,EAA/B,EAAV;AAED;AACD,wBAAIR,EAAEW,IAAF,EAAQC,QAAR,CAAiB,MAAjB,CAAJ,EAA8B;AAC5BV,2BAAKE,IAAL,CAAU,EAAEC,MAAM,MAAR,EAAgBF,SAASH,EAAEW,IAAF,EAAQJ,IAAR,GAAeC,IAAf,EAAzB,EAAV;AACD;AACF,mBARD;AA5BkB,mDAqCXN,IArCW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,IAEIW,IAAIC,OAFR;;AAwCtB,SAAO3B,WAAP;AACD,CAzCD","file":"wiki.js","sourcesContent":["'use strict';\n\nconst cheerio = require('cheerio');\nmodule.exports = app => {\n  const baseUrl = 'https://baike.baidu.com';\n  class WikiService extends app.Service {\n\n    /**\n     * 根据关键词查询百科\n     * @param {string} keyWord 关键词\n     * @return {*} 百科\n     */\n    async getWiki(keyWord) {\n      const result = await this.ctx.curl(baseUrl + '/item/' + encodeURI(keyWord), {\n        timeout: 3000,\n        dataType: 'text',\n      });\n      let html;\n      if (result.data) {\n        html = result;\n      } else {\n        const realLocation = result.headers.location;\n        html = await this.ctx.curl(baseUrl + realLocation, {\n          timeout: 3000,\n          dataType: 'text',\n        });\n      }\n      const $ = cheerio.load(html.data);\n      const wiki = [];\n      const content = $('.body-wrapper .content-wrapper .content .main-content');\n      wiki.push({ type: 'title', content: content.find('.lemmaWgt-lemmaTitle h1').text().trim() });\n      $('div', content).each((index, item) => {\n        if ($(item).hasClass('para-title')) {\n          wiki.push({ type: 'innerTitle', content: $(item).find('h2').text()\n            .trim() });\n        }\n        if ($(item).hasClass('para')) {\n          wiki.push({ type: 'main', content: $(item).text().trim() });\n        }\n      });\n      return wiki;\n    }\n  }\n  return WikiService;\n};\n"]}