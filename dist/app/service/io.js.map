{"version":3,"sources":["../../../app/service/io.js"],"names":["module","exports","SOCKET","MESSAGE","app","model","User","Question","Circle","IOService","token","userId","getUserId","socketId","ctx","socket","id","redis","set","to","message","get","targetSocketId","nsp","sockets","emit","userToken","targetId","circleId","findById","user","content","nickName","time","Date","now","rpush","JSON","stringify","type","circle","authorId","authorSocketId","questionId","question","attentions","_id","title","forEach","expertId","expertSocketId","jwt","verify","Service"],"mappings":"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","file":"io.js","sourcesContent":["'use strict';\n\nmodule.exports = app => {\n  const SOCKET = 'SOCKET';\n  const MESSAGE = 'MESSAGE';\n  const {\n    User,\n    Question,\n    Circle,\n  } = app.model;\n  class IOService extends app.Service {\n\n    /**\n     * 登录\n     * @param {String} token token\n     * @return {Promise<void>} id\n     */\n    async login(token) {\n      const userId = this.getUserId(token);\n      const socketId = this.ctx.socket.id;\n      await app.redis.set(SOCKET + userId, socketId);\n      return socketId;\n    }\n\n    async chat(to, message) {\n      // todo\n      const userId = '5a16699d5e58179af45247d0';\n      const targetSocketId = await app.redis.get(SOCKET + to);\n      if (targetSocketId) {\n        this.ctx.socket.nsp.sockets[targetSocketId].emit('message', userId, message);\n      }\n    }\n\n    /**\n     * 点赞\n     * @param {String} userToken token\n     * @param {String} targetId 被赞的人id\n     * @param {String} circleId 动态id\n     */\n    async like(userToken, targetId, circleId) {\n      const userId = this.getUserId(userToken);\n      const user = await User.findById(userId);\n      const content = { userId, nickName: user.nickName, circleId, time: Date.now() };\n      const targetSocketId = await app.redis.get(SOCKET + targetId);\n      if (targetSocketId) {\n        this.ctx.socket.nsp.sockets[targetSocketId].emit('like', content);\n      } else {\n        await app.redis.rpush(MESSAGE + targetId, JSON.stringify({ type: 'like', content }));\n      }\n    }\n\n    /**\n     * 评论\n     * @param {String} userToken token\n     * @param {String} circleId 动态id\n     * @param {String} targetId 被评论的人id\n     */\n    async comment(userToken, circleId, targetId) {\n      const userId = this.getUserId(userToken);\n      const user = await User.findById(userId);\n      const content = { userId, nickName: user.nickName, circleId, time: Date.now() };\n      const circle = await Circle.findById(circleId);\n      const authorId = circle.userId;\n      const authorSocketId = await app.redis.get(SOCKET + authorId);\n      if (authorSocketId) {\n        this.ctx.socket.nsp.sockets[authorSocketId].emit('comment', content);\n      } else {\n        await app.redis.rpush(MESSAGE + authorId, JSON.stringify({ type: 'comment', content }));\n      }\n      if (targetId) {\n        const targetSocketId = await app.redis.get(SOCKET + targetId);\n        if (targetSocketId) {\n          this.ctx.socket.nsp.sockets[targetSocketId].emit('reply', content);\n        } else {\n          await app.redis.rpush(MESSAGE + targetId, JSON.stringify({ type: 'reply', content }));\n        }\n      }\n    }\n\n    /**\n     * 回答\n     * @param {String} userToken token\n     * @param {String} questionId 问题id\n     */\n    async answer(userToken, questionId) {\n      const userId = this.getUserId(userToken);\n      const user = await User.findById(userId);\n      const question = await Question.findById(questionId);\n      const attentions = question.attentions;\n      const content = { userId, nickName: user.nickName, questionId: question._id, title: question.title, time: Date.now() };\n      const authorId = question.userId;\n      const authorSocketId = await app.redis.get(SOCKET + authorId);\n      if (authorSocketId) {\n        this.ctx.socket.nsp.sockets[authorSocketId].emit('answer', content);\n      } else {\n        await app.redis.rpush(MESSAGE + authorId, JSON.stringify({ type: 'answer', content }));\n      }\n      attentions.forEach(async id => {\n        const socketId = await app.redis.get(SOCKET + id);\n        if (socketId) {\n          this.ctx.socket.nsp.sockets[socketId].emit('attention', content);\n        } else {\n          await app.redis.rpush(MESSAGE + id, JSON.stringify({ type: 'attention', content }));\n        }\n      });\n    }\n\n    /**\n     * 邀请回答\n     * @param {String} userToken token\n     * @param {String} expertId 专家id\n     * @param {String} questionId 问题id\n     */\n    async invite(userToken, expertId, questionId) {\n      const userId = this.getUserId(userToken);\n      const user = await User.findById(userId);\n      const question = await Question.findById(questionId);\n      const content = { userId, nickName: user.nickName, questionId: question._id, title: question.title, time: Date.now() };\n      const expertSocketId = await app.redis.get(SOCKET + expertId);\n      if (expertSocketId) {\n        this.ctx.socket.nsp.sockets[expertSocketId].emit('invite', content);\n      } else {\n        await app.redis.rpush(MESSAGE + expertId, JSON.stringify({ type: 'invite', content }));\n      }\n    }\n\n    /**\n     * 关注用户\n     * @param {String} userToken token\n     * @param {String} targetId 被关注的人id\n     */\n    async follow(userToken, targetId) {\n      const userId = this.getUserId(userToken);\n      const user = await User.findById(userId);\n      const content = { userId, nickName: user.nickName, time: Date.now() };\n      const targetSocketId = await app.redis.get(SOCKET + targetId);\n      if (targetSocketId) {\n        this.ctx.socket.nsp.sockets[targetSocketId].emit('follow', content);\n      } else {\n        await app.redis.rpush(MESSAGE + targetId, JSON.stringify({ type: 'follow', content }));\n      }\n    }\n\n    /**\n     * 从token中获取id\n     * @param {String} token token\n     * @return {String} userId 用户id\n     */\n    getUserId(token) {\n      return this.ctx.app.jwt.verify(token, '123456').userId;\n    }\n  }\n  return IOService;\n};\n"]}