{"version":3,"sources":["../../../app/service/io.js"],"names":["module","exports","SOCKET","MESSAGE","app","model","User","Question","IOService","token","userId","getUserId","socketId","ctx","socket","id","redis","set","to","message","get","targetSocketId","nsp","sockets","emit","userToken","targetId","findById","user","content","nickName","time","Date","now","rpush","JSON","stringify","type","circleId","questionId","question","attentions","_id","title","authorSocketId","forEach","expertId","expertSocketId","jwt","verify","Service"],"mappings":"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","file":"io.js","sourcesContent":["'use strict';\n\nmodule.exports = app => {\n  const SOCKET = 'SOCKET';\n  const MESSAGE = 'MESSAGE';\n  const {\n    User,\n    Question,\n  } = app.model;\n  class IOService extends app.Service {\n\n    /**\n     * 登录\n     * @param {String} token token\n     * @return {Promise<void>} id\n     */\n    async login(token) {\n      const userId = this.getUserId(token);\n      const socketId = this.ctx.socket.id;\n      await app.redis.set(SOCKET + userId, socketId);\n      return socketId;\n    }\n\n    async chat(to, message) {\n      // todo\n      const userId = '5a16699d5e58179af45247d0';\n      const targetSocketId = await app.redis.get(SOCKET + to);\n      if (targetSocketId) {\n        this.ctx.socket.nsp.sockets[targetSocketId].emit('message', userId, message);\n      }\n    }\n\n    async like(userToken, targetId) {\n      const userId = this.getUserId(userToken);\n      const user = await User.findById(userId);\n      const content = { userId, nickName: user.nickName, time: Date.now() };\n      const targetSocketId = await app.redis.get(SOCKET + targetId);\n      if (targetSocketId) {\n        this.ctx.socket.nsp.sockets[targetSocketId].emit('like', content);\n      } else {\n        await app.redis.rpush(MESSAGE + targetId, JSON.stringify({ type: 'like', content }));\n      }\n    }\n\n    async comment(userToken, circleId, targetId) {\n      const userId = this.getUserId(userToken);\n      // todo\n    }\n\n    async answer(questionId) {\n      const question = await Question.findById(questionId);\n      const attentions = question.attentions;\n      const content = { questionId: question._id, title: question.title, time: Date.now() };\n      const userId = question.userId;\n      const authorSocketId = await app.redis.get(SOCKET + userId);\n      if (authorSocketId) {\n        this.ctx.socket.nsp.sockets[authorSocketId].emit('answer', content);\n      } else {\n        await app.redis.rpush(MESSAGE + userId, JSON.stringify({ type: 'answer', content }));\n      }\n      attentions.forEach(async id => {\n        const socketId = await app.redis.get(SOCKET + id);\n        if (socketId) {\n          this.ctx.socket.nsp.sockets[socketId].emit('attention', content);\n        } else {\n          await app.redis.rpush(MESSAGE + id, JSON.stringify({ type: 'attention', content }));\n        }\n      });\n    }\n\n    async invite(userToken, expertId, questionId) {\n      const userId = this.getUserId(userToken);\n      const user = await User.findById(userId);\n      const question = await Question.findById(questionId);\n      const content = { userId, nickName: user.nickName, questionId: question._id, title: question.title, time: Date.now() };\n      const expertSocketId = await app.redis.get(SOCKET + expertId);\n      if (expertSocketId) {\n        this.ctx.socket.nsp.sockets[expertSocketId].emit('invite', content);\n      } else {\n        await app.redis.rpush(MESSAGE + expertId, JSON.stringify({ type: 'invite', content }));\n      }\n    }\n\n    async follow(userToken, targetId) {\n      const userId = this.getUserId(userToken);\n      // todo\n    }\n\n    getUserId(token) {\n      return this.ctx.app.jwt.verify(token, '123456').userId;\n    }\n  }\n  return IOService;\n};\n"]}