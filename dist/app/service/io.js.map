{"version":3,"sources":["../../../app/service/io.js"],"names":["module","exports","SOCKET","MESSAGE","CHAT","RECENT","NEW_MESSAGE","app","model","User","Question","Circle","Message","Chat","IOService","token","userId","getUserId","socketId","ctx","socket","id","redis","set","userToken","targetId","content","type","chatId","sender","save","zadd","Date","now","sadd","get","targetSocketId","nsp","sockets","emit","srem","circleId","findById","user","myId","nickName","circle","authorId","authorSocketId","questionId","question","attentions","_id","title","rpush","expertId","expertSocketId","jwt","verify","Service"],"mappings":"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","file":"io.js","sourcesContent":["'use strict';\n\nmodule.exports = app => {\n  const SOCKET = 'SOCKET';\n  const MESSAGE = 'MESSAGE';\n  const CHAT = 'CHAT';\n  const RECENT = 'RECENT';\n  const NEW_MESSAGE = 'NEW_MESSAGE';\n  const {\n    User,\n    Question,\n    Circle,\n    Message,\n    Chat,\n  } = app.model;\n\n  class IOService extends app.Service {\n\n    /**\n     * 登录\n     * @param {String} token token\n     * @return {Promise<void>} id\n     */\n    async login(token) {\n      const userId = this.getUserId(token);\n      const socketId = this.ctx.socket.id;\n      await app.redis.set(SOCKET + userId, socketId);\n      return socketId;\n    }\n\n    /**\n     * 聊天消息\n     * @param {String} userToken token\n     * @param {String} targetId 发往id\n     * @param {String} content 消息内容\n     * @param {String} type 消息类型\n     */\n    async chat(userToken, targetId, content, type) {\n      const userId = this.getUserId(userToken);\n      const chatId = targetId < userId ? targetId + userId : userId + targetId;\n      await new Chat({\n        chatId,\n        type,\n        content,\n        sender: userId,\n      }).save();\n      await app.redis.zadd(RECENT + targetId, Date.now(), userId);\n      await app.redis.sadd(NEW_MESSAGE + targetId, userId);\n      await app.redis.zadd(RECENT + userId, Date.now(), targetId);\n      const targetSocketId = await app.redis.get(SOCKET + targetId);\n      if (targetSocketId && this.ctx.socket.nsp.sockets[targetSocketId]) {\n        this.ctx.socket.nsp.sockets[targetSocketId].emit('chat', {\n          type,\n          content,\n          sender: userId,\n        });\n      } else {\n        await app.redis.sadd(CHAT + targetId, 'chatId');\n      }\n    }\n\n    /**\n     * 消息已读\n     * @param {String} userToken token\n     * @param {String} targetId 消息作者\n     */\n    async read(userToken, targetId) {\n      const userId = this.getUserId(userToken);\n      await app.redis.srem(NEW_MESSAGE + userId, targetId);\n    }\n\n    /**\n     * 点赞\n     * @param {String} userToken token\n     * @param {String} targetId 被赞的人id\n     * @param {String} circleId 动态id\n     */\n    async like(userToken, targetId, circleId) {\n      const userId = this.getUserId(userToken);\n      const user = await User.findById(userId);\n      await new Message({\n        myId: targetId,\n        type: 'like',\n        userId,\n        nickName: user.nickName,\n        circleId,\n      }).save();\n      const targetSocketId = await app.redis.get(SOCKET + targetId);\n      if (targetSocketId && this.ctx.socket.nsp.sockets[targetSocketId]) {\n        this.ctx.socket.nsp.sockets[targetSocketId].emit('message', {\n          type: 'like',\n          userId,\n          nickName: user.nickName,\n          circleId,\n        });\n      } else {\n        await app.redis.set(MESSAGE + targetId, '1');\n      }\n    }\n\n    /**\n     * 评论\n     * @param {String} userToken token\n     * @param {String} circleId 动态id\n     * @param {String} targetId 被评论的人id\n     */\n    async comment(userToken, circleId, targetId) {\n      const userId = this.getUserId(userToken);\n      const user = await User.findById(userId);\n      const circle = await Circle.findById(circleId);\n      const authorId = circle.userId;\n      await new Message({\n        myId: authorId,\n        type: 'comment',\n        userId,\n        nickName: user.nickName,\n        circleId,\n      }).save();\n      const authorSocketId = await app.redis.get(SOCKET + authorId);\n      if (authorSocketId && this.ctx.socket.nsp.sockets[authorSocketId]) {\n        this.ctx.socket.nsp.sockets[authorSocketId].emit('message', {\n          type: 'comment',\n          userId,\n          nickName: user.nickName,\n          circleId,\n        });\n      } else {\n        await app.redis.set(MESSAGE + authorId, '1');\n      }\n      if (targetId) {\n        await new Message({\n          myId: targetId,\n          type: 'reply',\n          userId,\n          nickName: user.nickName,\n          circleId,\n        }).save();\n        const targetSocketId = await app.redis.get(SOCKET + targetId);\n        if (targetSocketId && this.ctx.socket.nsp.sockets[targetSocketId]) {\n          this.ctx.socket.nsp.sockets[targetSocketId].emit('message', {\n            type: 'reply',\n            userId,\n            nickName: user.nickName,\n            circleId,\n          });\n        } else {\n          await app.redis.set(MESSAGE + targetId, '1');\n        }\n      }\n    }\n\n    /**\n     * 回答\n     * @param {String} userToken token\n     * @param {String} questionId 问题id\n     */\n    async answer(userToken, questionId) {\n      const userId = this.getUserId(userToken);\n      const user = await User.findById(userId);\n      const question = await Question.findById(questionId);\n      const attentions = question.attentions;\n      const authorId = question.userId;\n      await new Message({\n        myId: authorId,\n        type: 'answer',\n        userId,\n        nickName: user.nickName,\n        questionId: question._id,\n        title: question.title,\n      }).save();\n      const authorSocketId = await app.redis.get(SOCKET + authorId);\n      if (authorSocketId && this.ctx.socket.nsp.sockets[authorSocketId]) {\n        this.ctx.socket.nsp.sockets[authorSocketId].emit('message', {\n          type: 'answer',\n          userId,\n          nickName: user.nickName,\n          questionId: question._id,\n          title: question.title,\n        });\n      } else {\n        await app.redis.rpush(MESSAGE + authorId, '1');\n      }\n      for (const id of attentions) {\n        await new Message({\n          myId: id,\n          type: 'attention',\n          userId,\n          nickName: user.nickName,\n          questionId: question._id,\n          title: question.title,\n        }).save();\n        const socketId = await app.redis.get(SOCKET + id);\n        if (socketId && this.ctx.socket.nsp.sockets[socketId]) {\n          this.ctx.socket.nsp.sockets[socketId].emit('message', {\n            type: 'attention',\n            userId,\n            nickName: user.nickName,\n            questionId: question._id,\n            title: question.title,\n          });\n        } else {\n          await app.redis.set(MESSAGE + id, '1');\n        }\n      }\n    }\n\n    /**\n     * 邀请回答\n     * @param {String} userToken token\n     * @param {String} expertId 专家id\n     * @param {String} questionId 问题id\n     */\n    async invite(userToken, expertId, questionId) {\n      const userId = this.getUserId(userToken);\n      const user = await User.findById(userId);\n      const question = await Question.findById(questionId);\n      await new Message({\n        myId: expertId,\n        type: 'invite',\n        userId,\n        nickName: user.nickName,\n        questionId: question._id,\n        title: question.title,\n      }).save();\n      const expertSocketId = await app.redis.get(SOCKET + expertId);\n      if (expertSocketId && this.ctx.socket.nsp.sockets[expertSocketId]) {\n        this.ctx.socket.nsp.sockets[expertSocketId].emit('message', {\n          type: 'invite',\n          userId,\n          nickName: user.nickName,\n          questionId: question._id,\n          title: question.title,\n        });\n      } else {\n        await app.redis.set(MESSAGE + expertId, '1');\n      }\n    }\n\n    /**\n     * 关注用户\n     * @param {String} userToken token\n     * @param {String} targetId 被关注的人id\n     */\n    async follow(userToken, targetId) {\n      const userId = this.getUserId(userToken);\n      const user = await User.findById(userId);\n      await new Message({\n        myId: targetId,\n        type: 'follow',\n        userId,\n        nickName: user.nickName,\n      }).save();\n      const targetSocketId = await app.redis.get(SOCKET + targetId);\n      if (targetSocketId && this.ctx.socket.nsp.sockets[targetSocketId]) {\n        this.ctx.socket.nsp.sockets[targetSocketId].emit('message', {\n          type: 'follow',\n          userId,\n          nickName: user.nickName,\n        });\n      } else {\n        await app.redis.set(MESSAGE + targetId, '1');\n      }\n    }\n\n    /**\n     * 从token中获取id\n     * @param {String} token token\n     * @return {String} userId 用户id\n     */\n    getUserId(token) {\n      return this.ctx.app.jwt.verify(token, '123456').userId;\n    }\n  }\n\n  return IOService;\n};\n"]}