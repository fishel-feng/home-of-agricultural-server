{"version":3,"sources":["../../../app/controller/question.js"],"names":["Controller","require","QuestionController","ctx","validate","title","content","tag","images","request","body","service","question","addQuestion","parts","multipart","autoFields","upload","questionId","deleteQuestion","status","field","addAnswer","answer","answerId","deleteAnswer","acceptAnswer","params","last","getQuestionList","questions","getAllQuestionList","id","getQuestion","result","getTags","tags","module","exports"],"mappings":"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","file":"question.js","sourcesContent":["'use strict';\nconst Controller = require('egg').Controller;\nclass QuestionController extends Controller {\n\n  /**\n   * 新建问题\n   */\n  async addQuestion() {\n    this.ctx.validate({\n      title: 'string',\n      content: 'string',\n      tag: 'string',\n      images: 'string',\n    });\n    const {\n      title,\n      content,\n      tag,\n      images,\n    } = this.ctx.request.body;\n    const question = await this.service.question.addQuestion(title, content, tag, images);\n    this.ctx.body = question;\n  }\n\n  async upload() {\n    const parts = this.ctx.multipart({\n      autoFields: true,\n    });\n    const images = await this.service.upload.upload(parts, 'question');\n    this.ctx.body = images;\n  }\n\n  /**\n   * 删除问题\n   */\n  async deleteQuestion() {\n    this.ctx.validate({\n      questionId: 'string',\n    });\n    const {\n      questionId,\n    } = this.ctx.request.body;\n    // TODO 删除图片\n    const status = await this.service.question.deleteQuestion(questionId);\n    this.ctx.body = status;\n  }\n\n  /**\n   * 添加回答\n   */\n  async addAnswer() {\n    const parts = this.ctx.multipart({\n      autoFields: true,\n    });\n    const images = await this.service.upload.upload(parts, 'answer');\n    const {\n      questionId,\n      content,\n    } = parts.field;\n    const answer = await this.service.question.addAnswer(questionId, content, images);\n    this.ctx.body = answer;\n  }\n\n  /**\n   * 删除回答\n   */\n  async deleteAnswer() {\n    this.ctx.validate({\n      questionId: 'string',\n      answerId: 'integer',\n    });\n    const {\n      questionId,\n      answerId,\n    } = this.ctx.request.body;\n    const status = await this.service.question.deleteAnswer(questionId, answerId);\n    this.ctx.body = {\n      status,\n    };\n  }\n\n  /**\n   * 采纳答案\n   */\n  async acceptAnswer() {\n    this.ctx.validate({\n      questionId: 'string',\n      answerId: 'integer',\n    });\n    const {\n      questionId,\n      answerId,\n    } = this.ctx.request.body;\n    const status = await this.service.question.acceptAnswer(questionId, answerId);\n    this.ctx.body = {\n      status,\n    };\n  }\n\n  /**\n   * 获取专家列表\n   */\n  async getExpertList() {\n    //\n  }\n\n  /**\n   * 分类获取问题列表\n   */\n  async getQuestionList() {\n    const tag = this.ctx.params.tag;\n    const last = this.ctx.params.last;\n    const questions = await this.service.question.getQuestionList(tag, last);\n    this.ctx.body = {\n      questions,\n    };\n  }\n\n  /**\n   * 获取全部问题列表\n   */\n  async getAllQuestionList() {\n    const last = this.ctx.params.last;\n    const questions = await this.service.question.getAllQuestionList(last);\n    this.ctx.body = {\n      questions,\n    };\n  }\n\n  /**\n   * 查看问题详情\n   */\n  async getQuestion() {\n    const id = this.ctx.params.questionId;\n    const result = await this.service.question.getQuestion(id);\n    this.ctx.body = result;\n  }\n\n  /**\n   * 获取问题标签\n   */\n  async getTags() {\n    const tags = await this.service.question.getTags();\n    this.ctx.body = tags;\n  }\n}\n\nmodule.exports = QuestionController;\n"]}