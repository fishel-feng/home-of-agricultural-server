{"version":3,"sources":["../../../app/controller/question.js"],"names":["Controller","require","module","exports","ctx","validate","title","content","tag","images","request","body","service","question","addQuestion","questionId","deleteQuestion","status","addAnswer","answer","answerId","deleteAnswer","attentionQuestion","removeAttentionQuestion","params","getExpertList","experts","last","getQuestionList","questions","getAllQuestionList","id","getQuestion","result","getTags","tags","saveTags","chatId","getChat","messages"],"mappings":"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","file":"question.js","sourcesContent":["'use strict';\n\nconst Controller = require('egg').Controller;\n\nmodule.exports = class QuestionController extends Controller {\n\n  /**\n   * 新建问题\n   */\n  async addQuestion() {\n    this.ctx.validate({\n      title: 'string',\n      content: 'string',\n      tag: 'string',\n      images: 'array',\n    });\n    const {\n      title,\n      content,\n      tag,\n      images,\n    } = this.ctx.request.body;\n    const question = await this.service.question.addQuestion(title, content, tag, images);\n    this.ctx.body = question;\n  }\n\n  /**\n   * 删除问题\n   */\n  async deleteQuestion() {\n    this.ctx.validate({\n      questionId: 'string',\n    });\n    const {\n      questionId,\n    } = this.ctx.request.body;\n    const status = await this.service.question.deleteQuestion(questionId);\n    this.ctx.body = status;\n  }\n\n  /**\n   * 添加回答\n   */\n  async addAnswer() {\n    this.ctx.validate({\n      questionId: 'string',\n      content: 'string',\n      images: 'array',\n    });\n    const {\n      questionId,\n      content,\n      images,\n    } = this.ctx.request.body;\n    const answer = await this.service.question.addAnswer(questionId, content, images);\n    this.ctx.body = answer;\n  }\n\n  /**\n   * 删除回答\n   */\n  async deleteAnswer() {\n    this.ctx.validate({\n      questionId: 'string',\n      answerId: 'integer',\n    });\n    const {\n      questionId,\n      answerId,\n    } = this.ctx.request.body;\n    const status = await this.service.question.deleteAnswer(questionId, answerId);\n    this.ctx.body = {\n      status,\n    };\n  }\n\n  /**\n   * 关注问题\n   */\n  async attentionQuestion() {\n    this.ctx.validate({\n      questionId: 'string',\n    });\n    const {\n      questionId,\n    } = this.ctx.request.body;\n    const status = await this.service.question.attentionQuestion(questionId);\n    this.ctx.body = {\n      status,\n    };\n  }\n\n  /**\n   * 取消关注问题\n   */\n  async removeAttentionQuestion() {\n    this.ctx.validate({\n      questionId: 'string',\n    });\n    const {\n      questionId,\n    } = this.ctx.request.body;\n    const status = await this.service.question.removeAttentionQuestion(questionId);\n    this.ctx.body = {\n      status,\n    };\n  }\n\n  /**\n   * 获取专家列表\n   */\n  async getExpertList() {\n    const tag = this.ctx.params.tag;\n    const experts = await this.service.question.getExpertList(tag);\n    this.ctx.body = {\n      experts,\n    };\n  }\n\n  /**\n   * 分类获取问题列表\n   */\n  async getQuestionList() {\n    const tag = this.ctx.params.tag;\n    const last = this.ctx.params.last;\n    const questions = await this.service.question.getQuestionList(tag, last);\n    this.ctx.body = {\n      questions,\n    };\n  }\n\n  /**\n   * 获取全部问题列表\n   */\n  async getAllQuestionList() {\n    const last = this.ctx.params.last;\n    const questions = await this.service.question.getAllQuestionList(last);\n    this.ctx.body = {\n      questions,\n    };\n  }\n\n  /**\n   * 查看问题详情\n   */\n  async getQuestion() {\n    const id = this.ctx.params.questionId;\n    const result = await this.service.question.getQuestion(id);\n    this.ctx.body = result;\n  }\n\n  /**\n   * 获取问题标签\n   */\n  async getTags() {\n    const tags = await this.service.question.getTags();\n    this.ctx.body = tags;\n  }\n\n  /**\n   * 设置tag\n   */\n  async saveTags() {\n    this.ctx.validate({\n      tags: 'array',\n    });\n    const {\n      tags,\n    } = this.ctx.request.body;\n    const status = await this.service.question.saveTags(tags);\n    this.ctx.body = status;\n  }\n\n  /**\n   * 获取聊天信息\n   */\n  async getChat() {\n    const chatId = this.ctx.params.chatId;\n    const last = this.ctx.params.last;\n    const messages = await this.service.question.getChat(chatId, last);\n    this.ctx.body = messages;\n  }\n};\n"]}